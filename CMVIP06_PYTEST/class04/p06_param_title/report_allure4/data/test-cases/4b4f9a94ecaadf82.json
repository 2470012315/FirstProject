{
  "uid" : "4b4f9a94ecaadf82",
  "name" : "输入错误账号，密码登陆{'username': 'xu', 'password': '111111'}",
  "fullName" : "test_a_title_new#test_login",
  "historyId" : "46b43b49ccfb19edb0609dc42a46a61b",
  "time" : {
    "start" : 1653569679269,
    "stop" : 1653569679270,
    "duration" : 1
  },
  "description" : " 测试登陆用例",
  "descriptionHtml" : "<p>测试登陆用例</p>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError: assert 'success!' == 'failed!'\n  - failed!\n  + success!",
  "statusTrace" : "test_input = {'password': '111111', 'username': 'xu'}, expeted = 'failed!'\ntitle = '输入错误账号，密码登陆'\n\n    @allure.title(\"{title}{test_input}\")\n    @pytest.mark.parametrize(\"test_input,expeted,title\",test_datas)\n    def test_login(test_input,expeted,title):\n        \"\"\" 测试登陆用例\"\"\"\n        # 获取输入数据\n        # 获取函数返回结果\n        result = login(test_input[\"username\"],test_input[\"password\"])\n        # 断言\n>       assert result[\"msg\"] == expeted\nE       AssertionError: assert 'success!' == 'failed!'\nE         - failed!\nE         + success!\n\ntest_a_title_new.py:65: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "description" : " 测试登陆用例",
    "status" : "failed",
    "statusMessage" : "AssertionError: assert 'success!' == 'failed!'\n  - failed!\n  + success!",
    "statusTrace" : "test_input = {'password': '111111', 'username': 'xu'}, expeted = 'failed!'\ntitle = '输入错误账号，密码登陆'\n\n    @allure.title(\"{title}{test_input}\")\n    @pytest.mark.parametrize(\"test_input,expeted,title\",test_datas)\n    def test_login(test_input,expeted,title):\n        \"\"\" 测试登陆用例\"\"\"\n        # 获取输入数据\n        # 获取函数返回结果\n        result = login(test_input[\"username\"],test_input[\"password\"])\n        # 断言\n>       assert result[\"msg\"] == expeted\nE       AssertionError: assert 'success!' == 'failed!'\nE         - failed!\nE         + success!\n\ntest_a_title_new.py:65: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "48e7e68aefdfe625",
      "name" : "stdout",
      "source" : "48e7e68aefdfe625.txt",
      "type" : "text/plain",
      "size" : 42
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : true,
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 1
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "suite",
    "value" : "test_a_title_new"
  }, {
    "name" : "host",
    "value" : "LAPTOP-IT6V6FE6"
  }, {
    "name" : "thread",
    "value" : "21796-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_a_title_new"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "4b4f9a94ecaadf82.json",
  "parameterValues" : [ ]
}